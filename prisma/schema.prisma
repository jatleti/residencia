generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @unique @default(uuid())
  email            String    @unique
  name             String?
  surname          String?
  dateStarted      DateTime?
  dateEnded        DateTime?
  nif              String?   @db.VarChar(20)
  nir              String?   @db.VarChar(20)
  address          String?   @db.VarChar(255)
  city             String?   @db.VarChar(255)
  province         String?   @db.VarChar(255)
  zip              String?   @db.VarChar(10)
  phone            String?   @db.VarChar(20)
  mobile           String?   @db.VarChar(20)
  position         String?   @db.VarChar(255)
  department       String?   @db.VarChar(255)
  permissions      String?   @db.VarChar(255)
  password         String?
  secure2FA        Int?      @default(0)
  secure2FAMode    String?   @db.VarChar(25)
  role             Int?      @default(1)
  blockPermissions Int?      @default(0)
  photo            String?   @db.VarChar(255)
  forgetToken      String?   @db.VarChar(1000)
  magicLinkToken   String?   @db.VarChar(1000)
  code2FA          String?   @db.VarChar(10)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  deleted_at       DateTime?
  active           Int       @default(1)
  roleId           String?
  Role             Role?     @relation(fields: [roleId], references: [id])

  UserSession     UserSession[]
  UserPermissions UserPermission[]
  Tutorships      Tutorship[]
  Authorizations  Authorization[]
  Sanctions       Sanction[]
  Invoices        Invoice[]
  Students        Student[]
  Files           File[]

  @@map("NT_UsersUSR")
}

model UserSession {
  id           String    @id @unique @default(uuid())
  id_user      String
  tokenid      String    @db.Text()
  active       Int       @default(1)
  init_session DateTime?
  last_change  DateTime?
  ip           String?   @db.VarChar(255)
  user         User      @relation(fields: [id_user], references: [id])

  @@map("NT_UserSessionsUS")
}

model ApiKeytoken {
  id          String    @id @unique @default(uuid())
  token       String    @unique
  description String?   @db.VarChar(255)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  access_on   DateTime?
  ip          String?   @db.VarChar(255)

  @@map("NT_ApiKeytokenKEY")
}

model Role {
  id              String           @id @unique @default(uuid())
  name            String           @unique
  description     String?          @db.VarChar(255)
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  deleted_at      DateTime?
  active          Int              @default(1)
  RolePermissions RolePermission[]
  Users           User[]

  @@map("NT_RolesROL")
}

model RolePermission {
  id         String    @id @unique @default(uuid())
  name       String    @db.VarChar(255)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  active     Int       @default(1)
  roleId     String?
  Role       Role?     @relation(fields: [roleId], references: [id])
  createdBy  String?
  deletedBy  String?

  @@map("NT_RolePermissionsRPE")
}

model UserPermission {
  id         String    @id @unique @default(uuid())
  name       String    @db.VarChar(255)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  active     Int       @default(1)
  userId     String?
  User       User?     @relation(fields: [userId], references: [id])
  createdBy  String?
  deletedBy  String?

  @@map("NT_UserPermissionsUPE")
}

model Student {
  id              String    @id @unique @default(uuid())
  name            String    @db.VarChar(255)
  surname         String?   @db.VarChar(255)
  email           String    @unique
  password        String?   @db.VarChar(255)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  deleted_at      DateTime?
  active          Int       @default(1)
  admitted        Int       @default(0)
  ingressed       Int       @default(0)
  graduated       Int       @default(0)
  birthdate       DateTime?
  ingressedAt     DateTime?
  inactiveAt      DateTime?
  observations    String?   @db.Text()
  allergies       String?   @db.Text()
  diseases        String?   @db.Text()
  course          String?   @db.VarChar(100)
  typeStudies     Int?      @default(0)
  studies         String?   @db.VarChar(255)
  turn            String?   @db.VarChar(100)
  gender          Int?      @default(0)
  motiveIngressed String?   @db.VarChar(255)
  isNew           Int?      @default(1)
  photo           String?   @db.VarChar(255)
  code            String?   @db.VarChar(100)
  nif             String?   @db.VarChar(20)
  nir             String?   @db.VarChar(20)
  address         String?   @db.VarChar(255)
  city            String?   @db.VarChar(100)
  province        String?   @db.VarChar(100)
  zip             String?   @db.VarChar(10)
  phone           String?   @db.VarChar(20)
  mobile          String?   @db.VarChar(20)
  block           String?   @db.VarChar(100)
  floor           String?   @db.VarChar(100)
  room            String?   @db.VarChar(100)
  bed             String?   @db.VarChar(100)

  Guardians      Guardian[]
  Tutorships     Tutorship[]
  Authorizations Authorization[]
  Sanctions      Sanction[]
  Invoices       Invoice[]
  Users          User[]
  Attendances    Attendance[]
  Files          File[]

  @@map("NT_StudentsSTU")
}

model Guardian {
  id           String    @id @unique @default(uuid())
  name         String    @db.VarChar(255)
  surname      String?   @db.VarChar(255)
  email        String    @unique
  password     String?   @db.VarChar(255)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted_at   DateTime?
  active       Int       @default(1)
  nif          String?   @db.VarChar(20)
  address      String?   @db.VarChar(255)
  city         String?   @db.VarChar(100)
  province     String?   @db.VarChar(100)
  zip          String?   @db.VarChar(10)
  phone        String?   @db.VarChar(20)
  mobile       String?   @db.VarChar(20)
  observations String?   @db.Text()

  Students Student[]
  Files    File[]

  @@map("NT_GuardiansGUA")
}

model Tutorship {
  id         String    @id @unique @default(uuid())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  active     Int       @default(1)

  date    DateTime?
  name    String?   @db.VarChar(500)
  content String?   @db.Text()
  notes   String?   @db.Text()

  userId String?
  User   User?   @relation(fields: [userId], references: [id])

  studentId String?
  Student   Student? @relation(fields: [studentId], references: [id])

  @@map("NT_TutorShipsTUS")
}

model Authorization {
  id         String    @id @unique @default(uuid())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  active     Int       @default(1)

  name    String?   @db.VarChar(500)
  date    DateTime?
  from    DateTime?
  to      DateTime?
  content String?   @db.Text()
  notes   String?   @db.Text()

  userId String?
  User   User?   @relation(fields: [userId], references: [id])

  studentId String?
  Student   Student? @relation(fields: [studentId], references: [id])

  @@map("NT_AuthorizationsAUT")
}

model Sanction {
  id          String    @id @unique @default(uuid())
  type        Int       @default(0)
  description String?   @db.Text()
  notes       String?   @db.Text()
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  active      Int       @default(1)
  date        DateTime?
  name        String?   @db.VarChar(500)

  studentId String?
  Student   Student? @relation(fields: [studentId], references: [id])
  userId    String?
  User      User?    @relation(fields: [userId], references: [id])

  @@map("NT_SanctionsSAN")
}

model Invoice {
  id          String    @id @unique @default(uuid())
  code        String    @db.VarChar(100)
  date        DateTime?
  description String?   @db.VarChar(255)
  amount      Decimal   @db.Decimal(10, 2)
  status      Int       @default(0)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  active      Int       @default(1)

  studentId String?
  Student   Student? @relation(fields: [studentId], references: [id])
  userId    String?
  User      User?    @relation(fields: [userId], references: [id])

  @@map("NT_InvoicesINV")
}

model Attendance {
  id         String    @id @unique @default(uuid())
  date       DateTime
  status     Int       @default(0)
  type       Int       @default(0)
  subtype    Int       @default(0)
  from       DateTime?
  to         DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  active     Int       @default(1)
  studentId  String?
  Student    Student?  @relation(fields: [studentId], references: [id])

  @@map("NT_AttendanceATT")
}

model File {
  id          String    @id @unique @default(uuid())
  name        String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
  active      Int       @default(1)
  type        Int?      @default(0)
  url         String?   @db.VarChar(255)
  userId      String?
  User        User?     @relation(fields: [userId], references: [id])
  studentId   String?
  Student     Student?  @relation(fields: [studentId], references: [id])
  guardianId  String?
  Guardian    Guardian? @relation(fields: [guardianId], references: [id])

  @@map("NT_FilesFIL")
}
